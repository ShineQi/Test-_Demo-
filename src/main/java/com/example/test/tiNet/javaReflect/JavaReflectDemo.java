package com.example.test.tiNet.javaReflect;

/**
 * @Author ShineQi
 * @Date 2020/11/20 14:10
 */
public class JavaReflectDemo {
    // https://blog.csdn.net/ju_362204801/article/details/90578678
//      思考：在讲反射之前，先思考一个问题，java中如何创建一个对象，有哪几种方式?
//       Java中创建对象大概有这几种方式：
//            1、使用new关键字：这是我们最常见的也是最简单的创建对象的方式
//            2、使用Clone的方法：无论何时我们调用一个对象的clone方法，JVM就会创建一个新的对象，将前面的对象的内容全部拷贝进去
//            3、使用反序列化：当我们序列化和反序列化一个对象，JVM会给我们创建一个单独的对象
//       上边是Java中常见的创建对象的三种方式，其实除了上边的三种还有另外一种方式，就是接下来我们要讨论的 “反射”

    /*反射就是把Java类中的各个部分，映射成一个个的Java对象，拿到这些对象后可以做一些事情。
    既然说反射是反射Java类中的各个组成部分，所以说咱们得知道一个类中有哪儿些部分？
    例如，一个类有：成员变量，方法，构造方法，等信息，利用反射技术咱们可以把这些组成部分映射成一个个对象。 反射是框架设计的灵魂*/

//    我们知道一个类里一般有构造函数、方法、成员变量(字段/属性)这三部分组成
//    翻阅API文档，可以看到
//    Class对象提供了如下常用方法：
    
    public void test(){
        System.out.println("你好");
    }


}
